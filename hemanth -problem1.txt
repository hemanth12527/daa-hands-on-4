import heapq

def merge_sorted_arrays(arrays):
    merged = []
    heap = []

    # Initialize the heap with the first element of each array
    for i, array in enumerate(arrays):
        if array:
            heapq.heappush(heap, (array[0], i, 0))  # (value, array index, index within the array)

    while heap:
        value, array_idx, idx_within_array = heapq.heappop(heap)
        merged.append(value)

        # Move to the next element in the array
        idx_within_array += 1
        if idx_within_array < len(arrays[array_idx]):
            heapq.heappush(heap, (arrays[array_idx][idx_within_array], array_idx, idx_within_array))

    return merged

# Example usage
array1 = [1, 3, 5, 7]
array2 = [2, 4, 6, 8]
array3 = [0, 9, 10, 11]

merged_array = merge_sorted_arrays([array1, array2, array3])
print(merged_array)